apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nixery.fullname" . }}
  labels:
    {{- include "nixery.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nixery.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nixery.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nixery.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.nixery.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v2/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /v2/
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: PORT
              value: {{ .Values.nixery.port | quote }}
            - name: NIXERY_STORAGE_BACKEND
              value: {{ .Values.nixery.storageBackend | quote }}
            {{- if eq .Values.nixery.storageBackend "filesystem" }}
            - name: STORAGE_PATH
              value: {{ .Values.nixery.filesystem.storagePath | quote }}
            {{- end }}
            {{- if eq .Values.nixery.storageBackend "gcs" }}
            - name: GCS_BUCKET
              value: {{ .Values.nixery.gcs.bucket | quote }}
            {{- if .Values.nixery.gcs.createSecret }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: "/etc/gcp/service-account.json"
            {{- end }}
            {{- end }}
            {{- if .Values.nixery.channel }}
            - name: NIXERY_CHANNEL
              value: {{ .Values.nixery.channel | quote }}
            {{- end }}
            {{- if .Values.nixery.nixTimeout }}
            - name: NIX_TIMEOUT
              value: {{ .Values.nixery.nixTimeout | quote }}
            {{- end }}
            {{- if .Values.nixery.popularityUrl }}
            - name: NIX_POPULARITY_URL
              value: {{ .Values.nixery.popularityUrl | quote }}
            {{- end }}
            {{- if .Values.nixery.pkgsRepo }}
            - name: NIXERY_PKGS_REPO
              value: {{ .Values.nixery.pkgsRepo | quote }}
            {{- end }}
            {{- if .Values.nixery.pkgsPath }}
            - name: NIXERY_PKGS_PATH
              value: {{ .Values.nixery.pkgsPath | quote }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- if eq .Values.nixery.storageBackend "filesystem" }}
            - name: storage
              mountPath: {{ .Values.nixery.filesystem.storagePath }}
            {{- end }}
            {{- if and (eq .Values.nixery.storageBackend "gcs") .Values.nixery.gcs.createSecret }}
            - name: gcp-service-account
              mountPath: /etc/gcp
              readOnly: true
            {{- end }}
            - name: tmp
              mountPath: /tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        {{- if eq .Values.nixery.storageBackend "filesystem" }}
        - name: storage
          {{- if .Values.nixery.filesystem.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "nixery.fullname" . }}-storage
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if and (eq .Values.nixery.storageBackend "gcs") .Values.nixery.gcs.createSecret }}
        - name: gcp-service-account
          secret:
            secretName: {{ include "nixery.fullname" . }}-gcp-credentials
        {{- end }}
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}